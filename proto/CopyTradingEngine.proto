syntax = "proto3";
import "google/protobuf/empty.proto";
package copy_trading;


message CopyTradingAccountIdGrpcModel{
    string TraderId = 1;
    string AccountId = 2;
}

enum AccountType{
    Provider = 0;
    Subscriber =1;
}

enum ResponseStatus{
    Ok = 0;
    ProviderAccountNotFound = 1;
    SubscriberAccountNotFound = 2;
}


message RegisterProviderAccountRequest{
    string TraderId = 1;
    string ProcessId = 2;
}

message RegisterSubscriberAccountRequest{
    string TraderId = 1;
    string ProcessId = 2;
}

message RegisterAccountResponse{
    string AccountId = 1;
}

message GetAccountsRequest{
    string TraderId = 1; 
} 


message GetAccountsResponse{
    repeated ProviderAccountGrpcModel Providers = 1;
    repeated SubscriberAccountGrpcModel Subscribers = 2;
}

message ProviderAccountGrpcModel{
    string AccountId = 1;
    int32 HasSubscribesAmount = 2;
}

message SubscriberAccountGrpcModel{
    string AccountId = 1;
    repeated SubscribeGrpcModel ConnectedToProviders = 2;
}


message SubscribeGrpcModel{
    CopyTradingAccountIdGrpcModel ToProvider = 1;
    double VolumeCopy = 2;
}

message SubscribeToProviderRequest{
    CopyTradingAccountIdGrpcModel Provider = 1;
    CopyTradingAccountIdGrpcModel Subscriber = 2;
    double VolumeCopy = 3;
}

message UnSubscribeFromProviderRequest{
    CopyTradingAccountIdGrpcModel Provider = 1;
    CopyTradingAccountIdGrpcModel Subscriber = 2;
}

message SubscribeToProviderResponse{
    ResponseStatus Status = 1;
}

message UnSubscribeFromProviderResponse{
    ResponseStatus Status = 1;
}


message GetTopProvidersRequest{
    string TraderId = 1;
    int32 Skip = 2;
    int32 Take = 3;
}


message GetSubscribersAmountRequest{
    string TraderId = 1;
}

message SubscriberAccountAmount{
    CopyTradingAccountIdGrpcModel Subscriber = 1;
    int32 Amount = 2;
}

message UpdateSubscriberVolumeCopyRequest{
    string TraderId = 1;
    string AccountId = 2;
    double VolumeCopy = 3;

} 


message UpdateSubscriberVolumeCopyResponse{
    ResponseStatus Status = 1;
}

service CopyTradingEngine {
    rpc RegisterProviderAccount(RegisterProviderAccountRequest) returns (RegisterAccountResponse);
    rpc RegisterSubscriberAccount(RegisterSubscriberAccountRequest) returns (RegisterAccountResponse);

    rpc GetAccounts(GetAccountsRequest) returns (GetAccountsResponse);

    rpc SubscribeToProvider(SubscribeToProviderRequest) returns (SubscribeToProviderResponse);
    rpc UnSubscribeFromProvider(UnSubscribeFromProviderRequest) returns (UnSubscribeFromProviderResponse);

    rpc GetTopProviders(GetTopProvidersRequest) returns (stream CopyTradingAccountIdGrpcModel);

    rpc GetSubscribersAmount(GetSubscribersAmountRequest) returns (stream SubscriberAccountAmount);
    
    rpc Ping(google.protobuf.Empty) returns (google.protobuf.Empty);
}